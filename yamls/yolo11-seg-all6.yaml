# Ultralytics YOLO ���, AGPL-3.0 license
# YOLO11-seg instance segmentation model. For Usage examples see https://docs.ultralytics.com/tasks/segment
 
# Parameters
nc: 6 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolo11n-seg.yaml' will call yolo11-seg.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.50, 0.25, 1024] # summary: 355 layers, 2876848 parameters, 2876832 gradients, 10.5 GFLOPs
  s: [0.50, 0.50, 1024] # summary: 355 layers, 10113248 parameters, 10113232 gradients, 35.8 GFLOPs
  m: [0.50, 1.00, 512] # summary: 445 layers, 22420896 parameters, 22420880 gradients, 123.9 GFLOPs
  l: [1.00, 1.00, 512] # summary: 667 layers, 27678368 parameters, 27678352 gradients, 143.0 GFLOPs
  x: [1.00, 1.50, 512] # summary: 667 layers, 62142656 parameters, 62142640 gradients, 320.2 GFLOPs
 
# YOLO11n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]] # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]] # 1-P2/4
  - [-1, 2, C3k2_HTB, [256, False, 0.25]]       # C3k2_HTB  backbone_C3k2_HTB   适用于噪声大、图像质量低的任务    提高恶劣天气图像恢复的性能
  - [-1, 1, Conv, [256, 3, 2]] # 3-P3/8
  - [-1, 2, C3k2_HTB, [512, False, 0.25]]       # C3k2_HTB  backbone_C3k2_HTB   适用于噪声大、图像质量低的任务    提高恶劣天气图像恢复的性能
  - [-1, 1, Conv, [512, 3, 2]] # 5-P4/16
  - [-1, 2, C3k2_HTB, [512, True]]       # C3k2_HTB  backbone_C3k2_HTB   适用于噪声大、图像质量低的任务    提高恶劣天气图像恢复的性能
  - [-1, 1, Conv, [1024, 3, 2]] # 7-P5/32
  - [-1, 2, C3k2_HTB, [1024, True]]       # C3k2_HTB  backbone_C3k2_HTB   适用于噪声大、图像质量低的任务    提高恶劣天气图像恢复的性能
  - [-1, 1, SPPF, [1024, 5]] # 9
  - [-1, 2, C2PSA, [1024]] # 10
 
# YOLO11n head
head:
  - [4, 1, Conv, [256]]  # 11-P3/8
  - [6, 1, Conv, [256]]  # 12-P4/16
  - [10, 1, Conv, [256]]  # 13-P5/32
 
  - [-1, 1, CARAFE, []] # 14 P4       # neck_CARAFE   修改UpSample    大感受野内聚合信息
  - [[-1, 12], 1, BiFPN, []] # 15
  - [-1, 3, C3k2_RCM, [256, False]] # 16-P4/16    # C3k2_RCM  neck_C3k2_RCM    修改C3k2   捕获全局上下文信息 + 金字塔上下文提取 
 
  - [-1, 1, CARAFE, []] # 17 P3              # neck_CARAFE   修改UpSample    大感受野内聚合信息
  - [[-1, 11], 1, BiFPN, []] # 18
  - [-1, 3, C3k2_RCM, [256, False]] # 19-P3/8     # C3k2_RCM  neck_C3k2_RCM    修改C3k2   捕获全局上下文信息 + 金字塔上下文提取 
 
  - [1, 1, Conv, [256, 3, 2]] # 20 P3
  - [[-1, 11, 19], 1, BiFPN, []] # 21
  - [-1, 3, C3k2_RCM, [256, False]] # 22-P3/8    # C3k2_RCM  neck_C3k2_RCM    修改C3k2   捕获全局上下文信息 + 金字塔上下文提取 
 
  - [-1, 1, Conv, [256, 3, 2]] # 23 P4
  - [[-1, 12, 16], 1, BiFPN, []] # 24
  - [-1, 3, C3k2, [512, False]] # 25-P4/16
  # - [-1, 3, C3k2_RCM, [512, False]] # 25-P4/16    # 加了之后有问题  C3k2_RCM  neck_C3k2_RCM    修改C3k2   捕获全局上下文信息 + 金字塔上下文提取 
 
  - [-1, 1, Conv, [256, 3, 2]] # 26 P5
  - [[-1, 13], 1, BiFPN, []] # 27
  - [-1, 3, C3k2, [1024, True]]  # 28-P5/32
  # - [-1, 3, C3k2_RCM, [1024, False]]  # 28-P5/32    # 加了之后有问题  C3k2_RCM  neck_C3k2_RCM    修改C3k2   捕获全局上下文信息 + 金字塔上下文提取 
 
  - [[22, 25, 28], 1, Segment_dyhead, [nc, 32, 256]] # Detect(P3, P4, P5)    # Segment_dyhead    动态卷积，增加参数量，但是不增加FLOP

